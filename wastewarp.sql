DROP DATABASE IF EXISTS WASTEWARP;
CREATE DATABASE WASTEWARP;
USE WASTEWARP;

CREATE TABLE WUSER(
	Username VARCHAR(50) PRIMARY KEY,
	FName VARCHAR(50) NOT NULL,
	LName VARCHAR(50) NOT NULL,
	Email VARCHAR(50) NOT NULL,
	Phone VARCHAR(50) NOT NULL,	
    UserPassword VARCHAR(50) NOT NULL
);

CREATE TABLE CUSTOMER(
	Username VARCHAR(50) PRIMARY KEY,
	CompanyName VARCHAR(50) NOT NULL,
	FOREIGN KEY(Username) REFERENCES WUSER(Username)	
);

CREATE TABLE COLLECTOR(
	Username VARCHAR(50) PRIMARY KEY,
	Points VARCHAR(50) NOT NULL,
	FOREIGN KEY(Username) REFERENCES WUSER(Username)	
);

CREATE TABLE VOLUNTEER(
	Username VARCHAR(50) NOT NULL,
	Organizaion VARCHAR(50) NOT NULL,
	FOREIGN KEY(Username) REFERENCES COLLECTOR(Username)		
);

CREATE TABLE STUDENT(
	Username VARCHAR(50) NOT NULL,
	Univeristy VARCHAR(100) NOT NULL,
	FOREIGN KEY(Username) REFERENCES COLLECTOR(Username)		
);

CREATE TABLE TRASHLOCATION(
	TrashLocation VARCHAR(50) PRIMARY KEY		
);

CREATE TABLE TRASH(
	TrashId VARCHAR(50) PRIMARY KEY,
	Amount VARCHAR(50) NOT NULL,
	TrashLocation VARCHAR(50) NOT NULL,
	TrashType VARCHAR(50),
	FOREIGN KEY(TrashLocation) REFERENCES TRASHLOCATION(TrashLocation)			
);

CREATE TABLE REPORTEDTRASH(
	Username VARCHAR(50) NOT NULL,
	TrashLocation VARCHAR(50) NOT NULL,
	FOREIGN KEY(Username) REFERENCES WUSER(Username),
	FOREIGN KEY(TrashLocation) REFERENCES TRASHLOCATION(TrashLocation)			
);

CREATE TABLE PURCHASEDTRASH(
	Username VARCHAR(50) NOT NULL,
	TrashId VARCHAR(50) NOT NULL,
	FOREIGN KEY(TrashId) REFERENCES TRASH(TrashId),
	FOREIGN KEY(Username) REFERENCES CUSTOMER(Username)
);

CREATE TABLE COLLECTEDTRASH(
	Username VARCHAR(50) NOT NULL,
	TrashId VARCHAR(50) NOT NULL,
	FOREIGN KEY(TrashId) REFERENCES TRASH(TrashId),
	FOREIGN KEY(Username) REFERENCES COLLECTOR(Username)
);

CREATE TABLE ENERGYPLANT(
	EnergyPlantId VARCHAR(50) PRIMARY KEY,
	PlantName VARCHAR(50) NOT NULL,
	PlantAddress VARCHAR(50) NOT NULL,
	PlantPhone VARCHAR(50) NOT NULL
);

CREATE TABLE ENERGYTRASH(
	EnergyPlantId VARCHAR(50) NOT NULL,
	TrashId VARCHAR(50) NOT NULL,
	FOREIGN KEY(TrashId) REFERENCES TRASH(TrashId),
	FOREIGN KEY(EnergyPlantId) REFERENCES ENERGYPLANT(EnergyPlantId)
);
